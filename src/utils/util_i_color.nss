// -----------------------------------------------------------------------------
//    File: util_i_color.nss
//  System: Utilities (include script)
//     URL: https://github.com/squattingmonk/nwn-core-framework
// Authors: Michael A. Sinclair (Squatting Monk) <squattingmonk@gmail.com>
// -----------------------------------------------------------------------------
// This file holds functions used to color strings with color codes. These codes
// take the format <cRGB>, where RBG are ALT codes (0-0255) for colors. Note
// that these colors do not work by default in conversations. However, you can
// set color codes as custom tokens and use the custom tokens in conversations
// to color the strings.
//
// This file also contains some constants for common color codes.
// ----- Acknowledgements ------------------------------------------------------
// ColorString() and GetColorCode() functions by rdjparadis. Color codes
// generated by Sherincall.
// -----------------------------------------------------------------------------

#include "x3_inc_string"

// -----------------------------------------------------------------------------
//                                   Constants
// -----------------------------------------------------------------------------

// COLOR_TOKEN by rdjparadis. Used to generate colors from RGB values. NEVER
// modify this string.
const string COLOR_TOKEN = "                  ##################$%&'()*+,-./0123456789:;;==?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[[]^_`abcdefghijklmnopqrstuvwxyz{|}~~ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü°°¢£§•¶ß®©™´¨¨ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛˛";

// In format <cRGB> where RGB are ALT codes (0-0255) for colors
const string COLOR_BLACK        = "<c   >";
const string COLOR_BLUE         = "<cÑÜÏ>";
const string COLOR_BLUE_DARK    = "<c74∞>";
const string COLOR_BLUE_LIGHT   = "<c≥Û˛>";    // Cyan
const string COLOR_BROWN        = "<cúR0>";
const string COLOR_BROWN_LIGHT  = "<c–ÅK>";
const string COLOR_DIVINE       = "<c˛Ï⁄>";
const string COLOR_GOLD         = "<c˝’ >";
const string COLOR_GRAY         = "<c|||>";
const string COLOR_GRAY_DARK    = "<cZZZ>";
const string COLOR_GRAY_LIGHT   = "<c¥¥¥>";
const string COLOR_GREEN        = "<c=…=>";
const string COLOR_GREEN_DARK   = "<c d >";
const string COLOR_GREEN_LIGHT  = "<c|˝ >";
const string COLOR_ORANGE       = "<c˛§ >";
const string COLOR_ORANGE_DARK  = "<c˛| >";
const string COLOR_ORANGE_LIGHT = "<c˛∏ >";
const string COLOR_RED          = "<c˛(;>";
const string COLOR_RED_DARK     = "<cú99>";
const string COLOR_RED_LIGHT    = "<c˙aU>";
const string COLOR_PINK         = "<c˙k∞>";
const string COLOR_PURPLE       = "<cñ2»>";
const string COLOR_TURQUOISE    = "<cK”Œ>";
const string COLOR_VIOLET       = "<cÈÑÁ>";
const string COLOR_VIOLET_LIGHT = "<cÛó¯>";
const string COLOR_VIOLET_DARK  = "<cƒ\ƒ>";
const string COLOR_WHITE        = "<c˛˛˛>";
const string COLOR_YELLOW       = "<c˛˛ >";
const string COLOR_YELLOW_DARK  = "<c–Œ >";
const string COLOR_YELLOW_LIGHT = "<c˛˛´>";

// By function
const string COLOR_DEFAULT   = COLOR_WHITE;
const string COLOR_ATTENTION = COLOR_ORANGE;
const string COLOR_BUG       = COLOR_RED_DARK;
const string COLOR_FAIL      = COLOR_RED;
const string COLOR_SUCCESS   = COLOR_GREEN_LIGHT;
const string COLOR_DEBUG     = COLOR_GRAY_LIGHT;
const string COLOR_INFO      = COLOR_BROWN_LIGHT;
const string COLOR_MAGIC     = COLOR_VIOLET;

// -----------------------------------------------------------------------------
//                              Function Prototypes
// -----------------------------------------------------------------------------

// ---< ColorString >---
// ---< util_i_color >---
// Returns sString colored with the color code sColor (usually a COLOR_*
// constant).
string ColorString(string sString, string sColor);

// ---< UnColorString >---
// ---< util_i_color >---
// Returns sString, stripped of any color codes.
string UnColorString(string sString);

// ---< GetColorCode >---
// ---< util_i_color >---
// Returns a color code for use with ColorString().
string GetColorCode(int nRed = 255, int nGreen = 255, int nBlue = 255);

// -----------------------------------------------------------------------------
//                             Function Definitions
// -----------------------------------------------------------------------------

string ColorString(string sString, string sColor)
{
    if (GetStringLength(sColor) == 5 && GetStringLeft(sColor, 2) == "<c")
        return sColor + sString + "</c>";

    return sString;
}

string UnColorString(string sString)
{
    sString = StringReplace(sString, "</c>", "");
    int nOpen = FindSubString(sString, "<c");
    int nClose = FindSubString(sString, ">", nOpen);
    int nLength;
    string sPrefix, sSuffix;

    while (nOpen != -1 && nClose != -1)
    {
        nLength = GetStringLength(sString);
        sPrefix = GetStringLeft(sString, nOpen);
        sSuffix = GetStringRight(sString, nLength - nClose - 1);
        sString = sPrefix + sSuffix;
        nOpen = FindSubString(sString, "<c");
        nClose = FindSubString(sString, ">", nOpen);
    }

    return sString;
}

string GetColorCode(int nRed = 255, int nGreen = 255, int nBlue = 255)
{
    return "<c" + GetSubString(COLOR_TOKEN, nRed,   1) +
                  GetSubString(COLOR_TOKEN, nGreen, 1) +
                  GetSubString(COLOR_TOKEN, nBlue,  1) + ">";
}
